NW ---------------------------------------------------------------------------

- fix window moving & drag threshold

UI ---------------------------------------------------------------------------

- fix tab navigation

- fix module autoloading vs css decl. order conflict

- fix style matching order so that styles with state tags are applied later
	option 1: introduce :state tags
	option 2: add styles to multiple stylesheets which are applied in order
		- this also solves the problem with module autoloading


EDITBOX ----------------------------------------------------------------------

- fix hscroll
- maxchars
- key filter
- password_char & eye_icon
- text_align: left, right, center
- mask:
	- select/navigate text with the mask or without
	- 0	digit required
	- 9	digit or space, optional
	- #	digit or space or +/-
	- L	a-zA-Z
	-

- fix editbox->editor/view/cursor/selection property proxying


LATER/HARD
- autowrap


DROPDOWN ---------------------------------------------------------------------

- static-text-dropdown
- editbox-dropdown
- maskedit dropdown with calendar
-

CALENDAR ---------------------------------------------------------------------

- review/add a date-math lib to luapower

- make week start day configurable (ui.week_start_day = 'Mo' / 'Su')
	- make sunday column movable but only to position 1 or 7
- add month & year above with left-right nav buttons
- change month by keyboard left-right page-up/down navigation
- change start week (scroll weeks vertically) by keyboard up/down navigation
	- scroll with scroll wheel too
	- alternate cell colors on consecutive months
	- change title to reflect month-in-view and surrounding months
		- we're always viewing 2 or 3 months
- multi-cell select restricted to consecutive days
	- make it work with vertical scrolling as well
	- allow multiple restricted multi-cell selections
- left bar with week-of-the-year number

COLOR PICKER -----------------------------------------------------------------

- editboxes: hsL
	- parse the text and change the display accordingly
- display chosen color + complementary hues
- color history / select color from history
	- history name so we can have diff. histories depending on usage context
- color dropper tool from anywhere on the desktop
- hue wheel with configurable granularity + lum/sat triangle
- hue/sat square with lum ramp instead of sat/lum with hue ramp

LITTLE WIDGETS ---------------------------------------------------------------

- menu bar
- menu
- popup menu
- linear-calendar

GRID -------------------------------------------------------------------------

- cell navigation: go to next/prev row on left-right nav
- cell navigation: tab to advance cell

--ctrl+page-up/page-down navigation based on fixed pages

- multiple row move
- row move with animation

- col %-size

- cell/col border collapse option

- cell formatting: format-string/class/function

- tooltip display on hover for clipped cells

- editable
	- immediate mode (click) or click-click mode
	- tab goes to next cell
	- right/left goes to next/prev cell
	- automatic cell advancing
	- cell advancing with tab

- tree-column
	- expand/collapse-all nodes option
	- row moving to another parent via drag & drop

- col colapse/show

- col shrink/expand-to-widest-row option on double-clicking between columns


LATER/DATASET
- sorting
	- sort by multiple columns
	? client-side sorting with collation
- filtering
	- quick filter (i.e. by value list)
	- search-in-column filter
	- result can be highlighting or hiding
- filter by range
- grouping:
	- group-by hierarchy
	- group-by multiple fields
	- expand/collapse all children
	- hide/show grouping header
	- invert selection
	- row moving to another group via drag&drop


LATER/HARD
- column bands
- summary row
- save/load grid configurations

LATER/NEVER
- auto row height based on wrapped text
- multi-line cell text with word-wrapping
- cell auto-ellipsis
- vertical grid with bands


NEW TAB-ORDER ALGORITHM =-----------------------------------------------------

--TODO: make a new tab-order-assigning algorithm based on horizontal and
--vertical overlap between widgets and the vertical/horizontal distance
--between them.

--TIPS: make a weighted DAG from inspecting all positiblities
--(that's O(n^2) btw) and then sort the nodes at each level based on the
--weights and walk the graph in toplogical+weighted order.

--[[
local function overlap(
	ax1, ay1, ax2, ay2,
	bx1, by1, bx2, by2,
	t1, t2
)
	local overlap_v = math.min(ay2, by2) - math.max(ay1, by1)
	local max_overlap_v = math.min(ay2 - ay1, by2 - by1)
	local distance_h = bx1 - ax2

	print(
		t1.id or t1.parent.id,
		t2.id or t2.parent.id,
		string.format('%.2f\t%.2f', overlap_v, distance_h),
		not (overlap_v < 0 or distance_h < 0) and '!!!' or ''
	)

	if overlap_v < 0 or distance_h < 0 then
		return 0
	end
	assert(max_overlap_v > 0)

	return (overlap_v / max_overlap_v) / distance_h
end

	print()
	print()
	print()

	if self.iswindow_view then
		for i,t in ipairs(t) do
			local x1, y1 = t:to_window(0, 0)
			local x2, y2 = t:to_window(t.w, t.h)
			print(
				t.id or t.parent.id,
				x1, y1
			)
		end
	end

]]
